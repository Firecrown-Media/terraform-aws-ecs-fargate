# Example terraform.tfvars file for complex ECS deployment
# Copy this to terraform.tfvars and modify values as needed

region      = "us-east-1"
name        = "my-complex-app"
environment = "prod"
vpc_name    = "main-vpc"

# Notification Configuration
notification_email = "devops@company.com"

# Container Configuration
container_image = "my-registry/my-app:latest"
container_port  = 8080
task_cpu        = 1024
task_memory     = 2048

# Environment Variables
container_environment = [
  {
    name  = "NODE_ENV"
    value = "production"
  },
  {
    name  = "LOG_LEVEL"
    value = "info"
  },
  {
    name  = "DATABASE_HOST"
    value = "prod-db.company.com"
  }
]

# Secrets (from AWS Systems Manager Parameter Store or Secrets Manager)
container_secrets = [
  {
    name      = "DATABASE_PASSWORD"
    valueFrom = "arn:aws:secretsmanager:us-east-1:123456789012:secret:prod/database/password"
  },
  {
    name      = "API_KEY"
    valueFrom = "arn:aws:ssm:us-east-1:123456789012:parameter/prod/api-key"
  }
]

# Service Configuration
desired_count = 3

# EC2 Configuration
instance_type       = "t3.large"
min_size           = 2
max_size           = 20
desired_capacity   = 3
on_demand_percentage = 30

spot_instance_types = [
  "t3.large",
  "t3.xlarge",
  "m5.large",
  "m5.xlarge",
  "c5.large",
  "c5.xlarge"
]

# Load Balancer Configuration
enable_deletion_protection = true
health_check_path         = "/health"

# SSL Certificate (replace with your certificate ARN)
certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"

# Auto Scaling Configuration
autoscaling_min_capacity    = 2
autoscaling_max_capacity    = 20
target_cpu_utilization     = 60
target_memory_utilization  = 70

# CodeDeploy Configuration
enable_code_deploy = true

# Monitoring Configuration
log_retention_days = 30

# Tags
tags = {
  project     = "ComplexECSApp"
  environment = "prod"
  cost-center = "Engineering"
  owner       = "DevOps Team"
  backup      = "required"
  compliance  = "sox"
}